using ProseFlow.Core.Abstracts;

namespace ProseFlow.Core.Models;

/// <summary>
/// Represents a record of a past AI interaction.
/// </summary>
public class HistoryEntry : EntityBase
{
    /// <summary>
    /// The date and time when the interaction occurred.
    /// </summary>
    public DateTime Timestamp { get; set; }

    /// <summary>
    /// The name of the action that was executed.
    /// </summary>
    public required string ActionName { get; set; }

    /// <summary>
    /// The original input text provided by the user.
    /// </summary>
    public required string InputText { get; set; }

    /// <summary>
    /// The final output text generated by the AI.
    /// </summary>
    public required string OutputText { get; set; }

    /// <summary>
    /// The high-level type of the AI provider that processed the request (e.g., "Cloud", "Local").
    /// </summary>
    public required string ProviderUsed { get; set; }

    /// <summary>
    /// The specific model used for the request (e.g., "gpt-4o", "llama-3-8b.gguf").
    /// </summary>
    public string ModelUsed { get; set; } = string.Empty;

    /// <summary>
    /// The number of tokens in the prompt sent to the AI.
    /// </summary>
    public long PromptTokens { get; set; }

    /// <summary>
    /// The number of tokens in the completion received from the AI.
    /// </summary>
    public long CompletionTokens { get; set; }

    /// <summary>
    /// The time taken for the AI provider to respond, in milliseconds.
    /// </summary>
    public double LatencyMs { get; set; }

    /// <summary>
    /// The estimated number of tokens generated per second.
    /// </summary>
    public double TokensPerSecond { get; set; }
}